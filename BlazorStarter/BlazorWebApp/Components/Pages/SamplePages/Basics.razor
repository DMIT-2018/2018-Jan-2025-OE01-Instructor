@page "/SamplePages/Basics"

<PageTitle>Review page basics</PageTitle>

<MudText Typo="Typo.h3">Introduction to Blazor Page (Review)</MudText>

@{
    //Comments in Razor can be like this in a @{ } to use //
}

<!--
Or comments can be like this within these "arrows"
-->
@{
    // Blazor Components Combine C# and HTML in a single file
    // The '@' symbol is used to switch between HTML to C#
    // When using '@', you are in the C# environment, allowing for C# code execution
    // Without '@' you are in the HTML environment, where you can write standard HTML
}
<MudCard Elevation="4">
    <MudCardHeader>
        <MudText Typo="Typo.h5">Demonstration of using Methods</MudText>
    </MudCardHeader>
    <MudCardContent>
        <!--Conditionally display content based on if the oddEvenValue is Even or Odd-->
        @if (IsEven)
        {
            <!--
            Display a message if the value is even
            injects the MY_NAME constant and oddEvenValue field
            into the HTML using the 'at' symbol
            -->
            <MudText>@MY_NAME is even (value: @oddEvenValue)</MudText>
        }
        else
        {
            <!--Display a different messasge is the value is odd-->
            <MudText>The random number is odd (value: @oddEvenValue)</MudText>
        }
    </MudCardContent>
    <MudCardActions>
        <MudButton OnClick="RandomValue"
                   Variant="Variant.Filled"
                   Color="Color.Primary">
            Random Number
        </MudButton>
    </MudCardActions>
</MudCard>

<MudGrid Spacing="6"
         Class="mt-4">
    <MudItem xs="12" sm="6" md="4">
        <MudForm @ref="textForm">
            <!-- Heading for this Section -->
            <MudText Typo="Typo.h5">Text Boxes</MudText>
            <!-- Using MudBlazor label and input to enter an email -->
            <MudTextField Label="Enter an Email"
                          @bind-Value="emailText"
                          Immediate="true"
                          InputType="InputType.Email"
                          Required="true"
                          RequiredError="Email is required."
                          Variant="Variant.Outlined" />
            <!-- Using MudBlazor label and input to enter a password -->
            <MudTextField Label="Enter a Password"
                          @bind-Value="passwordText"
                          Immediate
                          InputType="InputType.Password"
                          Required
                          RequiredError="Password is required."
                          Variant="Variant.Outlined" />
            <!-- Using MudBlazor label and input to enter a date -->
            <MudDatePicker Label="Enter a Date"
                           @bind-Date="dateText"
                           Variant="Variant.Outlined" />
            <!-- Buttons to trigger the TextSubmit Method and Form Validation -->
            <MudButton OnClick="TextSubmit"
                       Color="Color.Primary"
                       Class="mb-2">
                Text Submit
            </MudButton>
            <MudButton OnClick="@(()=>textForm.Validate())"
                       Color="Color.Info"
                       Class="mb-2">
                Validate Text
            </MudButton>
        </MudForm>
    </MudItem>
    <MudItem xs="12" sm="6" md="4">
        <MudForm @ref="radioCheckForm">
            <MudText Typo="Typo.h5">Radio buttons, Checkbox, Text Area</MudText>
            <MudRadioGroup @bind-Value="mealMud">
                <MudText Typo="Typo.h6">Select your favourite meal (MudBlazor):</MudText>
                @foreach (var meal in meals)
                {
                    <br />
                    <MudRadio Value="@meal">@meal</MudRadio>
                }
            </MudRadioGroup>
            <MudCheckBox @bind-Value=acceptanceBox
                         Label="I accept the terms of service." />
            <MudTextField Label="Enter your message"
                          Variant="Variant.Outlined"
                          Immediate="true"
                          @bind-Value="messageBody"
                          Lines="5" />
            <div class="d-flex flex-wrap justify-center">
                <MudButton OnClick="RadioCheckAreaSubmit"
                           Variant="Variant.Filled"
                           Color="Color.Primary">
                    Radio/Check/Area Submit
                </MudButton>
            </div>
        </MudForm>
    </MudItem>
    <MudItem xs="12" sm="6" md="4">
        <MudForm @ref=listSliderForm>
            <MudText Typo="Typo.h5">List and Slider</MudText>
            <MudSelect Label="Select a Ride"
                       @bind-Value="myRide"
                       Variant="Variant.Outlined"
                       Placeholder="Select ride..."
                       Clearable
                       Required
                       RequiredError="Ride selection is required.">
                @foreach (var item in rides)
                {
                    //You must add the T="int?" when using a nullable integer for a MudSelect
                    //If you do not add this, it will break
                    <MudSelectItem T="int?" Value="@item.Key">@item.Value</MudSelectItem>
                }
            </MudSelect>
            <MudSelect Label="Select Vacation Spots"
                       @bind-SelectedValues="selectedVacationSpots"
                       @bind-Value="vacationSpot"
                       Variant="Variant.Outlined"
                       MultiSelection="true"
                       Clearable
                       Required
                       RequiredError="Vacations spot select is required."
                       Placeholder="Select vacation spots">
                @foreach (var item in vacationSpots)
                {
                    <MudSelectItem Value="@item">@item</MudSelectItem>
                }
            </MudSelect>
            <br />
            <MudSlider @bind-Value=reviewRating
                       Min="0"
                       Max="10"
                       Step="1">
                Rate the form control review (0 = bad, 10 = good)
            </MudSlider>
            <!-- Displays the selected value in the range to the user -->
            <MudText Typo="Typo.body2"><strong>Rating:</strong> @reviewRating</MudText>
            <div class="d-flex flex-column">
                <div class="d-flex flex-wrap justify-center">
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Secondary"
                               OnClick="@(()=>listSliderForm.Validate())"
                               Class="my-2">
                        Validate List/Slider
                    </MudButton>
                </div>
                <div class="d-flex flex-wrap justify-center">
                    <MudButton Color="Color.Primary"
                               Variant="Variant.Filled"
                               OnClick="ListSliderSubmit">
                        List/Slider Submit
                    </MudButton>
                </div>
            </div>
        </MudForm>
    </MudItem>
</MudGrid>
<div class="mt-2 mx-auto">
    <MudText Typo="Typo.h6">@feedback</MudText>
</div>